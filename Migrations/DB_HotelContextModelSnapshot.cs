// <auto-generated />
using System;
using DB_Hotel;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace WebApiHotel.Migrations
{
    [DbContext(typeof(DB_HotelContext))]
    partial class DB_HotelContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DB_Hotel.Cliente", b =>
                {
                    b.Property<int>("Codigo_Cliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Codigo_Cliente"));

                    b.Property<int?>("Codigo_Endereco")
                        .HasMaxLength(30)
                        .HasColumnType("int");

                    b.Property<int?>("EnderecoCodigo_Endereco")
                        .HasColumnType("int");

                    b.Property<string>("Nacionalidade_Cliente")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Nome_Cliente")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Codigo_Cliente");

                    b.HasIndex("EnderecoCodigo_Endereco");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("DB_Hotel.Consumo", b =>
                {
                    b.Property<int>("Codigo_Consumo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Codigo_Consumo"));

                    b.Property<int?>("Codigo_Filial")
                        .HasColumnType("int");

                    b.Property<int?>("Desc_Consumo")
                        .HasMaxLength(100)
                        .HasColumnType("int");

                    b.Property<int?>("FilialCodigo_Filial")
                        .HasColumnType("int");

                    b.Property<decimal?>("Valor_Consumo")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal(5,2)");

                    b.HasKey("Codigo_Consumo");

                    b.HasIndex("FilialCodigo_Filial");

                    b.ToTable("Consumo");
                });

            modelBuilder.Entity("DB_Hotel.ContaCliente", b =>
                {
                    b.Property<int>("Codigo_ContaCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Codigo_ContaCliente"));

                    b.Property<int?>("ClienteCodigo_Cliente")
                        .HasColumnType("int");

                    b.Property<int?>("Codigo_Cliente")
                        .HasColumnType("int");

                    b.HasKey("Codigo_ContaCliente");

                    b.HasIndex("ClienteCodigo_Cliente");

                    b.ToTable("ContaCliente");
                });

            modelBuilder.Entity("DB_Hotel.ContaCliente_Consumo", b =>
                {
                    b.Property<int>("Codigo_ContaCliente")
                        .HasColumnType("int");

                    b.Property<int>("Codigo_Consumo")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataHora_Consumo")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Codigo_Funcionario")
                        .HasColumnType("int");

                    b.Property<bool?>("Entrega_Consumo")
                        .HasColumnType("bit");

                    b.Property<int?>("FuncionarioCodigo_Funcionario")
                        .HasColumnType("int");

                    b.HasKey("Codigo_ContaCliente", "Codigo_Consumo", "DataHora_Consumo");

                    b.HasIndex("Codigo_Consumo");

                    b.HasIndex("FuncionarioCodigo_Funcionario");

                    b.ToTable("ContaCliente_Consumo");
                });

            modelBuilder.Entity("DB_Hotel.ContaCliente_Servico", b =>
                {
                    b.Property<int>("Codigo_ContaCliente")
                        .HasColumnType("int");

                    b.Property<int>("Codigo_Servico")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataHora_Servico")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Codigo_Funcionario")
                        .HasColumnType("int");

                    b.Property<int?>("FuncionarioCodigo_Funcionario")
                        .HasColumnType("int");

                    b.HasKey("Codigo_ContaCliente", "Codigo_Servico", "DataHora_Servico");

                    b.HasIndex("Codigo_Servico");

                    b.HasIndex("FuncionarioCodigo_Funcionario");

                    b.ToTable("ContaCliente_Servico");
                });

            modelBuilder.Entity("DB_Hotel.Email", b =>
                {
                    b.Property<int>("Codigo_Email")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Codigo_Email"));

                    b.Property<int?>("ClienteCodigo_Cliente")
                        .HasColumnType("int");

                    b.Property<int?>("Codigo_Cliente")
                        .HasColumnType("int");

                    b.Property<string>("Endereco_Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Codigo_Email");

                    b.HasIndex("ClienteCodigo_Cliente");

                    b.ToTable("Email");
                });

            modelBuilder.Entity("DB_Hotel.Endereco", b =>
                {
                    b.Property<int>("Codigo_Endereco")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Codigo_Endereco"));

                    b.Property<string>("Bairro_Endereco")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Cidade_Endereco")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Complemento_Endereco")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Estado_Endereco")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Numero_Endereco")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Pais_Endereco")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Rua_Endereco")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Codigo_Endereco");

                    b.ToTable("Endereco");
                });

            modelBuilder.Entity("DB_Hotel.Filial", b =>
                {
                    b.Property<int>("Codigo_Filial")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Codigo_Filial"));

                    b.Property<int>("Codigo_Endereco")
                        .HasColumnType("int");

                    b.Property<int?>("EnderecoCodigo_Endereco")
                        .HasColumnType("int");

                    b.Property<string>("Nome_Filial")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Pais_Endereco")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("qtdEstrelas_Filial")
                        .HasColumnType("int");

                    b.HasKey("Codigo_Filial");

                    b.HasIndex("EnderecoCodigo_Endereco");

                    b.ToTable("Filial");
                });

            modelBuilder.Entity("DB_Hotel.Funcionario", b =>
                {
                    b.Property<int>("Codigo_Funcionario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Codigo_Funcionario"));

                    b.Property<int?>("Codigo_Filial")
                        .HasColumnType("int");

                    b.Property<int?>("Codigo_TipoFuncionario")
                        .HasColumnType("int");

                    b.Property<int?>("FilialCodigo_Filial")
                        .HasColumnType("int");

                    b.Property<string>("Nome_Funcionario")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("TipoFuncionarioCodigo_TipoFuncionario")
                        .HasColumnType("int");

                    b.HasKey("Codigo_Funcionario");

                    b.HasIndex("FilialCodigo_Filial");

                    b.HasIndex("TipoFuncionarioCodigo_TipoFuncionario");

                    b.ToTable("Funcionario");
                });

            modelBuilder.Entity("DB_Hotel.NotaFiscal", b =>
                {
                    b.Property<int>("Codigo_NotaFiscal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Codigo_NotaFiscal"));

                    b.Property<int?>("Codigo_TipoPagamento")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Data_NotaFiscal")
                        .HasColumnType("datetime2");

                    b.Property<string>("Numero_NotaFiscal")
                        .HasMaxLength(35)
                        .HasColumnType("nvarchar(35)");

                    b.Property<int?>("TipoPagamentoCodigo_TipoPagamento")
                        .HasColumnType("int");

                    b.Property<decimal?>("ValorTotal_NotaFiscal")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal(5,2)");

                    b.HasKey("Codigo_NotaFiscal");

                    b.HasIndex("TipoPagamentoCodigo_TipoPagamento");

                    b.ToTable("NotaFiscal");
                });

            modelBuilder.Entity("DB_Hotel.Quarto", b =>
                {
                    b.Property<int>("Codigo_Filial")
                        .HasColumnType("int");

                    b.Property<int>("Numero_Quarto")
                        .HasColumnType("int");

                    b.Property<int?>("CapacidadeMax_Quarto")
                        .HasColumnType("int");

                    b.Property<bool?>("CapacidadeOpc_Quarto")
                        .HasColumnType("bit");

                    b.Property<int?>("Codigo_TipoQuarto")
                        .HasColumnType("int");

                    b.Property<int?>("TipoQuartoCodigo_TipoQuarto")
                        .HasColumnType("int");

                    b.HasKey("Codigo_Filial", "Numero_Quarto");

                    b.HasIndex("TipoQuartoCodigo_TipoQuarto");

                    b.ToTable("Quarto");
                });

            modelBuilder.Entity("DB_Hotel.Reserva", b =>
                {
                    b.Property<int>("Codigo_Filial")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Codigo_Filial"));

                    b.Property<bool?>("Cancelada_Reserva")
                        .HasColumnType("bit");

                    b.Property<int?>("ClienteCodigo_Cliente")
                        .HasColumnType("int");

                    b.Property<bool?>("CobrancaDiaria_Reserva")
                        .HasColumnType("bit");

                    b.Property<int?>("Codigo_Cliente")
                        .HasColumnType("int");

                    b.Property<int?>("Codigo_NotaFiscal")
                        .HasColumnType("int");

                    b.Property<int>("Codigo_Reserva")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataFim_Reserva")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataInicio_Reserva")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FilialCodigo_Filial")
                        .HasColumnType("int");

                    b.Property<int?>("NotaFiscalCodigo_NotaFiscal")
                        .HasColumnType("int");

                    b.Property<string>("Numero_Quarto")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<int?>("QuartoCodigo_Filial")
                        .HasColumnType("int");

                    b.Property<int?>("QuartoNumero_Quarto")
                        .HasColumnType("int");

                    b.Property<decimal?>("ValorTotal_Reserva")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal(5,2)");

                    b.HasKey("Codigo_Filial");

                    b.HasIndex("ClienteCodigo_Cliente");

                    b.HasIndex("FilialCodigo_Filial");

                    b.HasIndex("NotaFiscalCodigo_NotaFiscal");

                    b.HasIndex("QuartoCodigo_Filial", "QuartoNumero_Quarto");

                    b.ToTable("Reserva");
                });

            modelBuilder.Entity("DB_Hotel.Servico", b =>
                {
                    b.Property<int>("Codigo_Servico")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Codigo_Servico"));

                    b.Property<int?>("Codigo_Filial")
                        .HasColumnType("int");

                    b.Property<int?>("Desc_Servico")
                        .HasMaxLength(100)
                        .HasColumnType("int");

                    b.Property<int?>("FilialCodigo_Filial")
                        .HasColumnType("int");

                    b.Property<decimal?>("Valor_Servico")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal(5,2)");

                    b.HasKey("Codigo_Servico");

                    b.HasIndex("FilialCodigo_Filial");

                    b.ToTable("Servico");
                });

            modelBuilder.Entity("DB_Hotel.Telefone", b =>
                {
                    b.Property<int>("Codigo_Telefone")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Codigo_Telefone"));

                    b.Property<int?>("ClienteCodigo_Cliente")
                        .HasColumnType("int");

                    b.Property<int?>("Codigo_Cliente")
                        .HasColumnType("int");

                    b.Property<string>("Numero_Telefone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Codigo_Telefone");

                    b.HasIndex("ClienteCodigo_Cliente");

                    b.ToTable("Telefone");
                });

            modelBuilder.Entity("DB_Hotel.TipoFuncionario", b =>
                {
                    b.Property<int>("Codigo_TipoFuncionario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Codigo_TipoFuncionario"));

                    b.Property<string>("Desc_TipoFuncionario")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Codigo_TipoFuncionario");

                    b.ToTable("TipoFuncionario");
                });

            modelBuilder.Entity("DB_Hotel.TipoPagamento", b =>
                {
                    b.Property<int>("Codigo_TipoPagamento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Codigo_TipoPagamento"));

                    b.Property<string>("Desc_TipoPagamento")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Codigo_TipoPagamento");

                    b.ToTable("TipoPagamento");
                });

            modelBuilder.Entity("DB_Hotel.TipoQuarto", b =>
                {
                    b.Property<int>("Codigo_TipoQuarto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Codigo_TipoQuarto"));

                    b.Property<int?>("Codigo_Filial")
                        .HasColumnType("int");

                    b.Property<string>("Desc_TipoQuarto")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("FilialCodigo_Filial")
                        .HasColumnType("int");

                    b.Property<decimal?>("Valor_TipoQuarto")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal(5,2)");

                    b.HasKey("Codigo_TipoQuarto");

                    b.HasIndex("FilialCodigo_Filial");

                    b.ToTable("TipoQuarto");
                });

            modelBuilder.Entity("DB_Hotel.Cliente", b =>
                {
                    b.HasOne("DB_Hotel.Endereco", "Endereco")
                        .WithMany()
                        .HasForeignKey("EnderecoCodigo_Endereco");

                    b.Navigation("Endereco");
                });

            modelBuilder.Entity("DB_Hotel.Consumo", b =>
                {
                    b.HasOne("DB_Hotel.Filial", "Filial")
                        .WithMany()
                        .HasForeignKey("FilialCodigo_Filial");

                    b.Navigation("Filial");
                });

            modelBuilder.Entity("DB_Hotel.ContaCliente", b =>
                {
                    b.HasOne("DB_Hotel.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteCodigo_Cliente");

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("DB_Hotel.ContaCliente_Consumo", b =>
                {
                    b.HasOne("DB_Hotel.Consumo", "Consumo")
                        .WithMany()
                        .HasForeignKey("Codigo_Consumo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DB_Hotel.ContaCliente", "ContaCliente")
                        .WithMany()
                        .HasForeignKey("Codigo_ContaCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DB_Hotel.Funcionario", "Funcionario")
                        .WithMany()
                        .HasForeignKey("FuncionarioCodigo_Funcionario");

                    b.Navigation("Consumo");

                    b.Navigation("ContaCliente");

                    b.Navigation("Funcionario");
                });

            modelBuilder.Entity("DB_Hotel.ContaCliente_Servico", b =>
                {
                    b.HasOne("DB_Hotel.ContaCliente", "ContaCliente")
                        .WithMany()
                        .HasForeignKey("Codigo_ContaCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DB_Hotel.Servico", "Servico")
                        .WithMany()
                        .HasForeignKey("Codigo_Servico")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DB_Hotel.Funcionario", "Funcionario")
                        .WithMany()
                        .HasForeignKey("FuncionarioCodigo_Funcionario");

                    b.Navigation("ContaCliente");

                    b.Navigation("Funcionario");

                    b.Navigation("Servico");
                });

            modelBuilder.Entity("DB_Hotel.Email", b =>
                {
                    b.HasOne("DB_Hotel.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteCodigo_Cliente");

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("DB_Hotel.Filial", b =>
                {
                    b.HasOne("DB_Hotel.Endereco", "Endereco")
                        .WithMany()
                        .HasForeignKey("EnderecoCodigo_Endereco");

                    b.Navigation("Endereco");
                });

            modelBuilder.Entity("DB_Hotel.Funcionario", b =>
                {
                    b.HasOne("DB_Hotel.Filial", "Filial")
                        .WithMany()
                        .HasForeignKey("FilialCodigo_Filial");

                    b.HasOne("DB_Hotel.TipoFuncionario", "TipoFuncionario")
                        .WithMany()
                        .HasForeignKey("TipoFuncionarioCodigo_TipoFuncionario");

                    b.Navigation("Filial");

                    b.Navigation("TipoFuncionario");
                });

            modelBuilder.Entity("DB_Hotel.NotaFiscal", b =>
                {
                    b.HasOne("DB_Hotel.TipoPagamento", "TipoPagamento")
                        .WithMany()
                        .HasForeignKey("TipoPagamentoCodigo_TipoPagamento");

                    b.Navigation("TipoPagamento");
                });

            modelBuilder.Entity("DB_Hotel.Quarto", b =>
                {
                    b.HasOne("DB_Hotel.Filial", "Filial")
                        .WithMany()
                        .HasForeignKey("Codigo_Filial")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DB_Hotel.TipoQuarto", "TipoQuarto")
                        .WithMany()
                        .HasForeignKey("TipoQuartoCodigo_TipoQuarto");

                    b.Navigation("Filial");

                    b.Navigation("TipoQuarto");
                });

            modelBuilder.Entity("DB_Hotel.Reserva", b =>
                {
                    b.HasOne("DB_Hotel.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteCodigo_Cliente");

                    b.HasOne("DB_Hotel.Filial", "Filial")
                        .WithMany()
                        .HasForeignKey("FilialCodigo_Filial");

                    b.HasOne("DB_Hotel.NotaFiscal", "NotaFiscal")
                        .WithMany()
                        .HasForeignKey("NotaFiscalCodigo_NotaFiscal");

                    b.HasOne("DB_Hotel.Quarto", "Quarto")
                        .WithMany()
                        .HasForeignKey("QuartoCodigo_Filial", "QuartoNumero_Quarto");

                    b.Navigation("Cliente");

                    b.Navigation("Filial");

                    b.Navigation("NotaFiscal");

                    b.Navigation("Quarto");
                });

            modelBuilder.Entity("DB_Hotel.Servico", b =>
                {
                    b.HasOne("DB_Hotel.Filial", "Filial")
                        .WithMany()
                        .HasForeignKey("FilialCodigo_Filial");

                    b.Navigation("Filial");
                });

            modelBuilder.Entity("DB_Hotel.Telefone", b =>
                {
                    b.HasOne("DB_Hotel.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteCodigo_Cliente");

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("DB_Hotel.TipoQuarto", b =>
                {
                    b.HasOne("DB_Hotel.Filial", "Filial")
                        .WithMany()
                        .HasForeignKey("FilialCodigo_Filial");

                    b.Navigation("Filial");
                });
#pragma warning restore 612, 618
        }
    }
}
